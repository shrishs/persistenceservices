apiVersion: v1
kind: Template
metadata:
  name: cassandra-statefulset-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: cassandra-${APPLICATION_NAME}
    name: cassandra-${APPLICATION_NAME}
  spec:
    clusterIP: None
    ports:
    - port: 9042
      name: cql
    - port: 7199
      name: jmx
    - port: 7000
      name: intra-node
    - port: 7001
      name: tls-intra-node
    selector:
      app: cassandra-${APPLICATION_NAME}
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: cassandra-${APPLICATION_NAME}
    labels:
      app: cassandra-${APPLICATION_NAME}
  spec:
    serviceName: cassandra-${APPLICATION_NAME}
    replicas: ${{REPLICA_COUNT}}
    selector:
      matchLabels:
        app: cassandra-${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: cassandra-${APPLICATION_NAME}
      spec:
        terminationGracePeriodSeconds: 1800
        serviceAccountName: ${{SERVICE_ACCOUNT}}
        containers:
        - name: cassandra-${APPLICATION_NAME}
          image: cassandra-rhel:${IMAGE_TAG_NAME}
          imagePullPolicy: Always
          ports:
          - containerPort: 7000
            name: intra-node
          - containerPort: 7001
            name: tls-intra-node
          - containerPort: 7199
            name: jmx
          - containerPort: 9042
            name: cql
          resources:
            limits:
              cpu: ${{CONTAINER_LIMIT_CPU}}
              memory: ${{CONTAINER_LIMIT_MEMORY}}
            requests:
             cpu: ${{CONTAINER_REQUEST_CPU}}
             memory: ${{CONTAINER_REQUEST_MEMORY}}
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nodetool drain
          env:
            - name: MAX_HEAP_SIZE
              value: ${JVM_MAX_HEAP}
            - name: HEAP_NEWSIZE
              value: ${JVM_NEW_HEAP}
            - name: CASSANDRA_SEEDS
              value: "cassandra-${APPLICATION_NAME}-0.cassandra-${APPLICATION_NAME}.${NAMESPACE}.svc.cluster.local"
            - name: CASSANDRA_CLUSTER_NAME
              value: ${CLUSTER_NAME}
            - name: CASSANDRA_DC
              value: ${DC_NAME}
            - name: CASSANDRA_RACK
              value: ${RACK_NAME}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - configMapRef:
                name: ${{CONFIG_MAP_NAME}}
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /ready-probe.sh
            initialDelaySeconds: 15
            timeoutSeconds: 5
          # These volume mounts are persistent. They are like inline claims,
          # but not exactly because the names need to match exactly one of
          # the stateful pod volumes.
          volumeMounts:
          - name: cassandra-${APPLICATION_NAME}-data
            mountPath: /cassandra_data
          nodeSelector:
            role: app
        #volumes:
        #  - name: cassandra-${APPLICATION_NAME}-data
        #    emptyDir: {}
    # These are converted to volume claims by the controller
    # and mounted at the paths mentioned above.
    # do not use these in production until ssd GCEPersistentDisk or other ssd pd
    volumeClaimTemplates:
    - metadata:
        name: cassandra-${APPLICATION_NAME}-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: generic
        resources:
          requests:
            storage: ${{STORAGE_CLAIM_SIZE}}
#defaultMode: 0744
parameters:
- name: APPLICATION_NAME
  description: Name of application using Cassandra instance. Name will be appended to cassandra object names
  required: true
  value: test
- name: NAMESPACE
  description: Namespace/project where the stateful set will be deployed
  required: true
- name: SERVICE_ACCOUNT
  description: Service account name to be used by the cassandra pods. Must have IPC_LOCK capabilities
  value: default
  required: true
- name: REPLICA_COUNT
  description: Number of pod replicas
  value: '3'
  required: true
- name: STORAGE_CLAIM_SIZE
  description: Storage claim size for each node instance
  value: '128Gi'
- name: CONTAINER_REQUEST_CPU
  description: request size for cpu
  value: '3000m'
- name: CONTAINER_LIMIT_CPU
  description: limit size for cpu
  value: '3000m'
- name: CONTAINER_REQUEST_MEMORY
  description: request size for memory
  value: '12Gi'
- name: CONTAINER_LIMIT_MEMORY
  description: limit size for memory
  value: '12Gi'
- name: JVM_MAX_HEAP
  description: JVM max heap size
  value: '8G'
- name: JVM_NEW_HEAP
  description: JVM new heap size
  value: '100M'
- name: CONFIG_MAP_NAME
  description: Config map name for cassandra configuration
  required: true
- name: IMAGE_TAG_NAME
  description: Image tag name
  required: true
  value: latest
- name: CLUSTER_NAME
  description: The cassandra cluster name
  required: true
  value: 'K8Demo'
- name: DC_NAME
  description: Cassandra Data Center name
  required: true
  value: 'DC1-K8Demo'
- name: RACK_NAME
  description: Cassandra rack name
  required: true
  value: 'Rack1-K8Demo'
